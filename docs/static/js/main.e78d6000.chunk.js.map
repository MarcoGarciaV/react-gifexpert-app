{"version":3,"sources":["Components/AddCategory.js","Helpers/getGifs.js","Components/GifGridItem.js","Components/GiftGrid.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GiftGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAMlB,SACI,uBACCO,KAAK,OACLC,MAAOT,EACPU,SAnBe,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAGII,MAAMF,GAHV,cAGbG,EAHa,gBAIEA,EAASC,OAJX,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCCPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAClC,OACI,sBAAKc,UAAU,yDAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAW,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SACtB,ECFwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OATCC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GACZH,EAAS,CACZf,KAAMkB,EACPL,SAAS,SAGlB,CAACpB,IAEGqB,EDdsBK,CAAa1B,GAAnCoB,EAAP,EAAOA,QAAaP,EAApB,EAAeN,KACf,OACI,qCACA,oBAAIS,UAAU,oDAAd,SAAmEhB,IAClEoB,GAAW,mBAAGJ,UAAU,oDAAb,wBACZ,qBAAKA,UAAU,YAAf,SACQ,6BAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACd,cAAC,EAAD,eAEKA,GADAA,EAAIC,eEXnBgB,EAAe,WACzB,MAAoCzC,mBAAS,CAAC,gBAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAQA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACvB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCjB7B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.e78d6000.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange=(e)=>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        // console.log('submit done')\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setinputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n             type=\"text\"\r\n             value={inputValue}\r\n             onChange={handleInputChange}\r\n             />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async(category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=QmsWrT5rZrIMKOUULMKloD2A9WC33zFg`;\r\n\r\n    const response = await fetch(url);\r\n    const {data} = await response.json();\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useFetchGifs} from '../Hooks/useFetchGifs';\r\nimport {GifGridItem} from './GifGridItem';\r\n\r\nexport const GiftGrid = ({category}) => {\r\n    const {loading,data:images} =useFetchGifs(category);\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__bounce animate__fadeIn\">{category}</h3>\r\n        {loading && <p className=\" animate__animated animate__bounce animate__flash\">Loading...</p>}\r\n        <div className=\"card-grid\">\r\n                <ol>\r\n                    {\r\n                        images.map(img=>\r\n                        <GifGridItem \r\n                        key={img.id}\r\n                         {...img} />\r\n                        )\r\n                    }\r\n                </ol>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport {getGifs} from '../Helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n     //El método se disparará una vez, cuando le asignes que no tiene valores en el arreglo\r\n     useEffect(()=>{\r\n         getGifs(category).then(imgs =>{\r\n                    setstate({\r\n                 data: imgs,\r\n                loading: false\r\n             })\r\n         });\r\n     },[category]);\r\n\r\n    return state; // {data:[], loading: true}\r\n}\r\n","import React, { useState } from 'react'\r\nimport {AddCategory} from './Components/AddCategory';\r\nimport { GiftGrid } from './Components/GiftGrid';\r\n\r\n export const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['Dragon Ball'])\r\n\r\n    // const handledAdd= ()=>{\r\n    //     // setCategories([...categories,'Naruto']);\r\n    //     // setCategories(['Naruto',...categories]);\r\n    //     setCategories(cats => [...cats,'Naruto']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map(category => \r\n                    <GiftGrid \r\n                        key={category} \r\n                        category={category} />\r\n                    )\r\n                }\r\n            </ol>\r\n           \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}